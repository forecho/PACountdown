name: Build and Release

on:
  push:
    tags:
      - 'v*' # Trigger on tags like v1.0, v1.0.1, etc.
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: write

jobs:
  build-macos:
    name: Build macOS
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Verify Xcode project
      run: |
        echo "Checking Xcode project..."
        if [ -d "PACountdown.xcodeproj" ]; then
          echo "‚úÖ Xcode project found"
          xcodebuild -list -project PACountdown.xcodeproj
        else
          echo "‚ùå Xcode project not found"
          find . -name "*.xcodeproj" -type d
          exit 1
        fi

    - name: Create ExportOptions.plist
      run: |
        cat <<EOF > ExportOptions.plist
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>mac-application</string>
            <key>destination</key>
            <string>export</string>
        </dict>
        </plist>
        EOF

    - name: Build and Archive
      run: |
        echo "Creating build directory..."
        mkdir -p ./build
        echo "Building and archiving..."
        xcodebuild -project PACountdown.xcodeproj \
          -scheme PACountdown \
          -configuration Release \
          archive \
          -archivePath ./build/PACountdown.xcarchive \
          -destination 'platform=macOS'

    - name: Export App
      run: |
        xcodebuild -exportArchive -archivePath ./build/PACountdown.xcarchive -exportPath ./build -exportOptionsPlist ExportOptions.plist

    - name: Create macOS Zip file
      run: |
        cd ./build
        if [ -f PACountdown.app ]; then
          zip -r "../PACountdown-macOS-${GITHUB_REF#refs/tags/}.zip" PACountdown.app
        else
          echo "PACountdown.app not found, listing directory contents:"
          ls -la
          exit 1
        fi
    
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: PACountdown-macOS
        path: PACountdown-macOS-*.zip
        retention-days: 7

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Verify project structure
      run: |
        Write-Host "Checking project files..."
        if (Test-Path "PACountdown.Windows/PACountdown.Windows.csproj") {
          Write-Host "‚úÖ Project file found"
          Get-Content PACountdown.Windows/PACountdown.Windows.csproj | Select-Object -First 10
        } else {
          Write-Host "‚ùå Project file not found"
          Get-ChildItem -Recurse -Name "*.csproj"
          exit 1
        }

    - name: Restore dependencies
      run: |
        Write-Host "Restoring dependencies..."
        dotnet restore PACountdown.Windows/PACountdown.Windows.csproj -v normal -p:EnableWindowsTargeting=true

    - name: Build Windows app
      run: |
        Write-Host "Building Windows app..."
        dotnet build PACountdown.Windows/PACountdown.Windows.csproj -c Release --no-restore -v normal -p:EnableWindowsTargeting=true

    - name: Publish Windows app (Self-contained)
      run: |
        dotnet publish PACountdown.Windows/PACountdown.Windows.csproj -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:EnableWindowsTargeting=true -o publish/win-x64

    - name: Publish Windows app (Framework-dependent)
      run: |
        dotnet publish PACountdown.Windows/PACountdown.Windows.csproj -c Release -r win-x64 --self-contained false -p:PublishSingleFile=true -p:EnableWindowsTargeting=true -o publish/win-x64-fx

    - name: Create Windows zip files
      shell: pwsh
      run: |
        $version = $env:GITHUB_REF -replace "refs/tags/", ""
        
        # Check if publish directories exist
        if (Test-Path "publish/win-x64") {
          Compress-Archive -Path "publish/win-x64/*" -DestinationPath "PACountdown-Windows-SelfContained-$version.zip"
          Write-Host "Created self-contained zip: PACountdown-Windows-SelfContained-$version.zip"
        } else {
          Write-Host "Self-contained publish directory not found"
          exit 1
        }
        
        if (Test-Path "publish/win-x64-fx") {
          Compress-Archive -Path "publish/win-x64-fx/*" -DestinationPath "PACountdown-Windows-FrameworkDependent-$version.zip"
          Write-Host "Created framework-dependent zip: PACountdown-Windows-FrameworkDependent-$version.zip"
        } else {
          Write-Host "Framework-dependent publish directory not found"
          exit 1
        }

    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: PACountdown-Windows
        path: |
          PACountdown-Windows-*.zip
        retention-days: 7

  create-release:
    name: Create GitHub Release
    needs: [build-macos, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Display structure of downloaded files
      run: ls -la artifacts/

    - name: Create Release Notes
      run: |
        cat > release_notes.md << 'EOF'
        ## PACountdown Release ${GITHUB_REF#refs/tags/}
        
        A 5-minute candlestick countdown timer for stock traders.
        
        ### üì¶ Downloads
        
        **macOS:**
        - `PACountdown-macOS-*.zip` - macOS application bundle
        
        **Windows:**
        - `PACountdown-Windows-SelfContained-*.zip` - Standalone executable (no .NET required)
        - `PACountdown-Windows-FrameworkDependent-*.zip` - Requires .NET 8.0 Runtime
        
        ### üöÄ Features
        
        - **Automatic 5-Minute Countdown**: Syncs to real-world 5-minute intervals
        - **Market Hours Awareness**: US stock market hours (9:30 AM - 4:00 PM ET) or 24/7 global mode
        - **Sound Alerts**: Configurable pre-notification alerts
        - **Cross-Platform**: Native macOS and Windows applications
        - **Settings Persistence**: Saves your preferences automatically
        - **Multilingual**: English and Chinese support (Windows version)
        
        ### üíª System Requirements
        
        **macOS:**
        - macOS 12.0 (Monterey) or later
        - Apple Silicon or Intel processor
        
        **Windows:**
        - Windows 10 version 1909 or later (Windows 11 recommended)
        - .NET 8.0 Runtime (for framework-dependent version only)
        
        ### üìù Installation
        
        **macOS:**
        1. Download and extract `PACountdown-macOS-*.zip`
        2. Move `PACountdown.app` to Applications folder
        3. Right-click and select "Open" on first launch
        
        **Windows:**
        1. Download the appropriate zip file
        2. Extract and run `PACountdown.Windows.exe`
        3. For self-contained version: No additional setup required
        4. For framework-dependent version: Install [.NET 8.0 Runtime](https://dotnet.microsoft.com/download/dotnet/8.0) if not already installed
        EOF

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/PACountdown-macOS/*
          artifacts/PACountdown-Windows/*
        body_path: release_notes.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 