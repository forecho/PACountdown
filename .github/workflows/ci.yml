name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-macos-build:
    name: Test macOS Build
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build macOS app (Debug)
      run: |
        xcodebuild -project PACountdown.xcodeproj -scheme PACountdown -configuration Debug build -destination 'platform=macOS'

    - name: Build macOS app (Release)
      run: |
        xcodebuild -project PACountdown.xcodeproj -scheme PACountdown -configuration Release build -destination 'platform=macOS'

  test-windows-build:
    name: Test Windows Build
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Verify Windows platform
      run: |
        Write-Host "Running on Windows: $($env:OS)"
        if ($env:OS -ne "Windows_NT") {
          Write-Error "This job must run on Windows platform"
          exit 1
        }

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore PACountdown.Windows/PACountdown.Windows.csproj -p:EnableWindowsTargeting=true

    - name: Build Windows app (Debug)
      run: dotnet build PACountdown.Windows/PACountdown.Windows.csproj -c Debug --no-restore -p:EnableWindowsTargeting=true

    - name: Build Windows app (Release)
      run: dotnet build PACountdown.Windows/PACountdown.Windows.csproj -c Release --no-restore -p:EnableWindowsTargeting=true

    - name: Test publish (Self-contained)
      run: |
        dotnet publish PACountdown.Windows/PACountdown.Windows.csproj -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:EnableWindowsTargeting=true -o test-publish/self-contained

    - name: Test publish (Framework-dependent)
      run: |
        dotnet publish PACountdown.Windows/PACountdown.Windows.csproj -c Release -r win-x64 --self-contained false -p:PublishSingleFile=true -p:EnableWindowsTargeting=true -o test-publish/framework-dependent

  lint-and-format:
    name: Code Quality
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Verify Windows platform
      run: |
        Write-Host "Running on Windows: $($env:OS)"
        if ($env:OS -ne "Windows_NT") {
          Write-Error "This job must run on Windows platform"
          exit 1
        }

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore .NET dependencies
      run: dotnet restore PACountdown.Windows/PACountdown.Windows.csproj -p:EnableWindowsTargeting=true

    - name: Check .NET code formatting
      run: dotnet format PACountdown.Windows/PACountdown.Windows.csproj --verify-no-changes --verbosity diagnostic -p:EnableWindowsTargeting=true

    - name: Analyze .NET code
      run: dotnet build PACountdown.Windows/PACountdown.Windows.csproj -c Release --no-restore -p:TreatWarningsAsErrors=true -p:EnableWindowsTargeting=true